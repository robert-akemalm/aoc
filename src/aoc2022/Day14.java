package aoc2022;

import static aoc2022.Day14.Element.AIR;
import static aoc2022.Day14.Element.ROCK;
import static aoc2022.Day14.Element.SAND;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import aoc2022.Util.Pos;

public class Day14 {
    public static void main(String[] args) {
        a(TEST_INPUT);
        a(INPUT);
        b(TEST_INPUT);
        b(INPUT);
    }

    private static void a(String input) {
        Cave cave = Cave.parse(input);
        int numSands = 0;
        Pos source = new Pos(500, 0);
        while (cave.addSand(source)) {
            numSands++;
        }
        System.out.println(numSands);
    }

    private static void b(String input) {
        Cave cave = Cave.parse(input, true);
        int numSands = 0;
        Pos source = new Pos(500, 0);
        while (cave.addSand(source)) {
            numSands++;
        }
        System.out.println(numSands);
    }

    private record Cave(Map<Pos, Element> map, int maxY, boolean hasFloor) {
        private static final Pos ABYSS = new Pos(-1, -1);

        static Cave parse(String data) {
            return parse(data, false);
        }

        static Cave parse(String data, boolean withFloor) {
            List<Line> lines = data.lines().map(Line::parse).toList();
            Set<Pos> rocks = lines.stream().map(Line::allPositions).flatMap(Collection::stream).collect(Collectors.toSet());
            int maxY = rocks.stream().mapToInt(Pos::y).max().orElse(0);
            Map<Pos, Element> map = new HashMap<>();
            for (Pos rock : rocks) {
                map.put(rock, ROCK);
            }
            return new Cave(map, maxY, withFloor);
        }

        boolean addSand(Pos pos) {
            if (map.get(pos) == SAND) {
                return false;
            }
            while (pos != ABYSS) {
                Pos nextPos = moveSandOneStep(pos);
                if (nextPos == pos) {
                    map.put(pos, SAND);
                    return true;
                }
                pos = nextPos;
            }
            return false;
        }

        Pos moveSandOneStep(Pos pos) {
            int newY = pos.y() + 1;
            Pos nextPos = new Pos(pos.x(), newY);
            if (element(nextPos) == null) {
                return ABYSS;
            } else if (element(nextPos) == AIR) {
                return nextPos;
            }

            nextPos = new Pos(pos.x() - 1, newY);
            if (element(nextPos) == AIR) {
                return nextPos;
            }

            nextPos = new Pos(pos.x() + 1, newY);
            if (element(nextPos) == AIR) {
                return new Pos(pos.x() + 1, newY);
            }

            return pos;
        }

        Element element(Pos pos) {
            if (hasFloor) {
                return pos.y() == maxY + 2 ? ROCK : map.getOrDefault(pos, AIR);
            } else {
                return pos.y() > maxY ? null : map.getOrDefault(pos, AIR);
            }
        }
    }

    enum Element {ROCK, AIR, SAND}

    private record Line(List<LineSegment> segments) {
        static Line parse(String data) {
            List<Pos> endPoints = new ArrayList<>();
            for (String endpoint : data.split(" -> ")) {
                String[] xy = endpoint.split(",");
                endPoints.add(new Pos(Integer.parseInt(xy[0]), Integer.parseInt(xy[1])));
            }

            List<LineSegment> segments = new ArrayList<>();
            for (int i = 1; i < endPoints.size(); i++) {
                segments.add(new LineSegment(endPoints.get(i - 1), endPoints.get(i)));
            }
            return new Line(segments);
        }

        Set<Pos> allPositions() {
            return segments.stream().map(LineSegment::allPositions).flatMap(Collection::stream).collect(Collectors.toSet());
        }
    }

    private record LineSegment(Pos start, Pos end) {
        List<Pos> allPositions() {
            if (start.x() == end.x()) {
                int min = Math.min(start().y(), end().y());
                int max = Math.max(start().y(), end().y());
                return IntStream.rangeClosed(min, max).mapToObj(i -> new Pos(start().x(), i)).toList();
            } else if (start.y() == end.y()) {
                int min = Math.min(start().x(), end().x());
                int max = Math.max(start().x(), end().x());
                return IntStream.rangeClosed(min, max).mapToObj(i -> new Pos(i, start().y())).toList();
            } else {
                throw new IllegalStateException();
            }
        }
    }

    private static final String TEST_INPUT = "498,4 -> 498,6 -> 496,6\n"
                                             + "503,4 -> 502,4 -> 502,9 -> 494,9";

    private static final String INPUT = "529,71 -> 529,72 -> 539,72 -> 539,71\n"
                                        + "484,168 -> 489,168\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "502,165 -> 507,165\n"
                                        + "481,165 -> 486,165\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "500,176 -> 505,176\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "506,42 -> 510,42\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "490,156 -> 495,156\n"
                                        + "496,174 -> 501,174\n"
                                        + "503,40 -> 507,40\n"
                                        + "501,136 -> 501,137 -> 514,137 -> 514,136\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "495,165 -> 500,165\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "529,71 -> 529,72 -> 539,72 -> 539,71\n"
                                        + "488,165 -> 493,165\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "524,42 -> 528,42\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "533,118 -> 538,118\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "500,42 -> 504,42\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "493,153 -> 498,153\n"
                                        + "472,176 -> 477,176\n"
                                        + "491,162 -> 496,162\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "487,159 -> 492,159\n"
                                        + "521,40 -> 525,40\n"
                                        + "501,136 -> 501,137 -> 514,137 -> 514,136\n"
                                        + "475,174 -> 480,174\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "484,162 -> 489,162\n"
                                        + "515,40 -> 519,40\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "485,172 -> 490,172\n"
                                        + "512,34 -> 516,34\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "492,172 -> 497,172\n"
                                        + "501,136 -> 501,137 -> 514,137 -> 514,136\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "489,174 -> 494,174\n"
                                        + "516,121 -> 521,121\n"
                                        + "512,118 -> 517,118\n"
                                        + "529,115 -> 534,115\n"
                                        + "519,118 -> 524,118\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "509,40 -> 513,40\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "525,112 -> 530,112\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "537,121 -> 542,121\n"
                                        + "494,159 -> 499,159\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "509,121 -> 514,121\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "528,88 -> 528,89 -> 542,89 -> 542,88\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "529,71 -> 529,72 -> 539,72 -> 539,71\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "505,162 -> 510,162\n"
                                        + "523,121 -> 528,121\n"
                                        + "493,176 -> 498,176\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "501,159 -> 506,159\n"
                                        + "478,172 -> 483,172\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "497,156 -> 502,156\n"
                                        + "521,109 -> 526,109\n"
                                        + "518,112 -> 523,112\n"
                                        + "518,42 -> 522,42\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "519,92 -> 519,93 -> 528,93\n"
                                        + "522,115 -> 527,115\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "512,42 -> 516,42\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "482,174 -> 487,174\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "479,176 -> 484,176\n"
                                        + "486,176 -> 491,176\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "481,170 -> 486,170\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "515,36 -> 519,36\n"
                                        + "512,38 -> 516,38\n"
                                        + "498,140 -> 498,142 -> 497,142 -> 497,150 -> 507,150 -> 507,142 -> 502,142 -> 502,140\n"
                                        + "528,88 -> 528,89 -> 542,89 -> 542,88\n"
                                        + "537,85 -> 537,77 -> 537,85 -> 539,85 -> 539,76 -> 539,85 -> 541,85 -> 541,75 -> 541,85\n"
                                        + "498,162 -> 503,162\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "513,124 -> 513,126 -> 510,126 -> 510,134 -> 524,134 -> 524,126 -> 518,126 -> 518,124\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "515,115 -> 520,115\n"
                                        + "509,165 -> 514,165\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "518,38 -> 522,38\n"
                                        + "509,36 -> 513,36\n"
                                        + "528,88 -> 528,89 -> 542,89 -> 542,88\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "506,38 -> 510,38\n"
                                        + "526,118 -> 531,118\n"
                                        + "519,92 -> 519,93 -> 528,93\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96\n"
                                        + "505,26 -> 505,28 -> 500,28 -> 500,31 -> 513,31 -> 513,28 -> 509,28 -> 509,26\n"
                                        + "488,170 -> 493,170\n"
                                        + "530,121 -> 535,121\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "528,68 -> 528,59 -> 528,68 -> 530,68 -> 530,63 -> 530,68 -> 532,68 -> 532,64 -> 532,68 -> 534,68 -> 534,66 -> 534,68 -> 536,68 -> 536,60 -> 536,68\n"
                                        + "524,55 -> 524,46 -> 524,55 -> 526,55 -> 526,45 -> 526,55 -> 528,55 -> 528,47 -> 528,55 -> 530,55 -> 530,46 -> 530,55 -> 532,55 -> 532,48 -> 532,55\n"
                                        + "493,23 -> 493,13 -> 493,23 -> 495,23 -> 495,19 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,14 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,18 -> 505,23\n"
                                        + "527,96 -> 527,98 -> 525,98 -> 525,106 -> 536,106 -> 536,98 -> 530,98 -> 530,96";
}
